Output for function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]. Here in this interval the
function first ascends then descends which means we have change in signs of the derivative. We can see that the
method converges but not to the wanted solution.

C:\Users\Marko\Anaconda3\envs\gpuEnv\python.exe "F:/Jupyter notebooks/NumericalMethodsAnalysis_171038/Comparison.py"

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.1...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.5605650858173139 with accuracy of 0.1 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 0.0 ms.
Number of steps: 1

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.1...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.176182557128062 with accuracy of 0.1 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 3.999 ms.
Number of steps: 22

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.05...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7198656432618303 with accuracy of 0.05 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 0.0 ms.
Number of steps: 4

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.05...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.145176961458728 with accuracy of 0.05 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 3.0010000000000003 ms.
Number of steps: 23

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.01...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7680221220224707 with accuracy of 0.01 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 1.001 ms.
Number of steps: 7

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.01...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.137702323751848 with accuracy of 0.01 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 3.0 ms.
Number of steps: 24

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.005...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.771070249562074 with accuracy of 0.005 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 2.0 ms.
Number of steps: 8

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.005...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.1368629285954843 with accuracy of 0.005 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 2.999 ms.
Number of steps: 25

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.001...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7729465884042789 with accuracy of 0.001 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 4.001 ms.
Number of steps: 10

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.001...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.1368629285954843 with accuracy of 0.001 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 4.001 ms.
Number of steps: 25

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.0001...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
Current interval searched in: [0.7731835607175523,1]. Split point(c) for interval: 0.7732835363943361
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7732835363943361,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7732835363943361 with accuracy of 0.0001 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 6.0 ms.
Number of steps: 12

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.0001...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Iteration number: 26
============================================================================================================================================
X_prev: 2.1368629285954843, X_curr: 2.136851417164889
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.136851417164889 with accuracy of 0.0001 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 3.0 ms.
Number of steps: 26

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-05...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
Current interval searched in: [0.7731835607175523,1]. Split point(c) for interval: 0.7732835363943361
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7732835363943361,1].
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
Current interval searched in: [0.7732835363943361,1]. Split point(c) for interval: 0.7733256675283257
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733256675283257,1].
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
Current interval searched in: [0.7733256675283257,1]. Split point(c) for interval: 0.7733434137535998
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733434137535998,1].
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
Current interval searched in: [0.7733434137535998,1]. Split point(c) for interval: 0.7733508872189108
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733508872189108,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7733508872189108 with accuracy of 1e-05 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 4.0 ms.
Number of steps: 15

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-05...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Iteration number: 26
============================================================================================================================================
X_prev: 2.1368629285954843, X_curr: 2.136851417164889
============================================================================================================================================

Iteration number: 27
============================================================================================================================================
X_prev: 2.136851417164889, X_curr: 2.136851414987547
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.136851414987547 with accuracy of 1e-05 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 3.0 ms.
Number of steps: 27

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-06...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
Current interval searched in: [0.7731835607175523,1]. Split point(c) for interval: 0.7732835363943361
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7732835363943361,1].
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
Current interval searched in: [0.7732835363943361,1]. Split point(c) for interval: 0.7733256675283257
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733256675283257,1].
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
Current interval searched in: [0.7733256675283257,1]. Split point(c) for interval: 0.7733434137535998
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733434137535998,1].
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
Current interval searched in: [0.7733434137535998,1]. Split point(c) for interval: 0.7733508872189108
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733508872189108,1].
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
Current interval searched in: [0.7733508872189108,1]. Split point(c) for interval: 0.773354034253293
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.773354034253293,1].
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
Current interval searched in: [0.773354034253293,1]. Split point(c) for interval: 0.7733553594048526
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733553594048526,1].
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
Current interval searched in: [0.7733553594048526,1]. Split point(c) for interval: 0.7733559173906324
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733559173906324,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7733559173906324 with accuracy of 1e-06 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 5.002000000000001 ms.
Number of steps: 18

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(x_curr - x_prev) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-06...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Iteration number: 26
============================================================================================================================================
X_prev: 2.1368629285954843, X_curr: 2.136851417164889
============================================================================================================================================

Iteration number: 27
============================================================================================================================================
X_prev: 2.136851417164889, X_curr: 2.136851414987547
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.136851414987547 with accuracy of 1e-06 by using convergence test: (abs(x_curr - x_prev) < epsilon).
 Time of full iteration: 3.0 ms.
Number of steps: 27

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.1...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7468021971686806 with accuracy of 0.1 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 0.0 ms.
Number of steps: 5

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.1...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.145176961458728 with accuracy of 0.1 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 6.0 ms.
Number of steps: 23
F:\Jupyter notebooks\NumericalMethodsAnalysis_171038\utils.py:154: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig = plt.figure(figsize=(12, 8))

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.05...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7611830266981156 with accuracy of 0.05 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 0.0 ms.
Number of steps: 6

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.05...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.137702323751848 with accuracy of 0.05 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 1.001 ms.
Number of steps: 24

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.01...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.771070249562074 with accuracy of 0.01 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 5.0 ms.
Number of steps: 8

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.01...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.137702323751848 with accuracy of 0.01 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 3.0 ms.
Number of steps: 24

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.005...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.772386381321533 with accuracy of 0.005 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 0.9990000000000001 ms.
Number of steps: 9

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.005...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.1368629285954843 with accuracy of 0.005 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 3.0010000000000003 ms.
Number of steps: 25

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.001...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7731835607175523 with accuracy of 0.001 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 1.0 ms.
Number of steps: 11

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.001...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.1368629285954843 with accuracy of 0.001 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 3.0010000000000003 ms.
Number of steps: 25

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.0001...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
Current interval searched in: [0.7731835607175523,1]. Split point(c) for interval: 0.7732835363943361
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7732835363943361,1].
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
Current interval searched in: [0.7732835363943361,1]. Split point(c) for interval: 0.7733256675283257
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733256675283257,1].
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
Current interval searched in: [0.7733256675283257,1]. Split point(c) for interval: 0.7733434137535998
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733434137535998,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7733434137535998 with accuracy of 0.0001 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 4.0 ms.
Number of steps: 14

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.0001...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.1368629285954843 with accuracy of 0.0001 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 2.999 ms.
Number of steps: 25

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-05...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
Current interval searched in: [0.7731835607175523,1]. Split point(c) for interval: 0.7732835363943361
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7732835363943361,1].
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
Current interval searched in: [0.7732835363943361,1]. Split point(c) for interval: 0.7733256675283257
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733256675283257,1].
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
Current interval searched in: [0.7733256675283257,1]. Split point(c) for interval: 0.7733434137535998
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733434137535998,1].
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
Current interval searched in: [0.7733434137535998,1]. Split point(c) for interval: 0.7733508872189108
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733508872189108,1].
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
Current interval searched in: [0.7733508872189108,1]. Split point(c) for interval: 0.773354034253293
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.773354034253293,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.773354034253293 with accuracy of 1e-05 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 5.0 ms.
Number of steps: 16

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-05...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Iteration number: 26
============================================================================================================================================
X_prev: 2.1368629285954843, X_curr: 2.136851417164889
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.136851417164889 with accuracy of 1e-05 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 2.002 ms.
Number of steps: 26

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-06...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
Current interval searched in: [0.7731835607175523,1]. Split point(c) for interval: 0.7732835363943361
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7732835363943361,1].
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
Current interval searched in: [0.7732835363943361,1]. Split point(c) for interval: 0.7733256675283257
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733256675283257,1].
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
Current interval searched in: [0.7733256675283257,1]. Split point(c) for interval: 0.7733434137535998
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733434137535998,1].
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
Current interval searched in: [0.7733434137535998,1]. Split point(c) for interval: 0.7733508872189108
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733508872189108,1].
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
Current interval searched in: [0.7733508872189108,1]. Split point(c) for interval: 0.773354034253293
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.773354034253293,1].
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
Current interval searched in: [0.773354034253293,1]. Split point(c) for interval: 0.7733553594048526
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733553594048526,1].
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
Current interval searched in: [0.7733553594048526,1]. Split point(c) for interval: 0.7733559173906324
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733559173906324,1].
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
Current interval searched in: [0.7733559173906324,1]. Split point(c) for interval: 0.773356152342001
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.773356152342001,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.773356152342001 with accuracy of 1e-06 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 3.0 ms.
Number of steps: 19

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-06...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Iteration number: 26
============================================================================================================================================
X_prev: 2.1368629285954843, X_curr: 2.136851417164889
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.136851417164889 with accuracy of 1e-06 by using convergence test: (abs(function(x_curr)) < epsilon).
 Time of full iteration: 3.0010000000000003 ms.
Number of steps: 26

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.1...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.6216894673489434 with accuracy of 0.1 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 0.0 ms.
Number of steps: 2

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.1...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.114838728119353 with accuracy of 0.1 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 4.0 ms.
Number of steps: 21

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.05...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7468021971686806 with accuracy of 0.05 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 0.0 ms.
Number of steps: 5

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.05...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.176182557128062 with accuracy of 0.05 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 7.001 ms.
Number of steps: 22

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.01...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7680221220224707 with accuracy of 0.01 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 0.0 ms.
Number of steps: 7

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.01...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.137702323751848 with accuracy of 0.01 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 2.0010000000000003 ms.
Number of steps: 24

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.005...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.771070249562074 with accuracy of 0.005 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 2.0 ms.
Number of steps: 8

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.005...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.137702323751848 with accuracy of 0.005 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 2.993 ms.
Number of steps: 24

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.001...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7729465884042789 with accuracy of 0.001 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 1.9989999999999999 ms.
Number of steps: 10

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.001...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.1368629285954843 with accuracy of 0.001 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 3.0010000000000003 ms.
Number of steps: 25

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.0001...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
Current interval searched in: [0.7731835607175523,1]. Split point(c) for interval: 0.7732835363943361
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7732835363943361,1].
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
Current interval searched in: [0.7732835363943361,1]. Split point(c) for interval: 0.7733256675283257
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733256675283257,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7733256675283257 with accuracy of 0.0001 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 1.9989999999999999 ms.
Number of steps: 13

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.0001...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Iteration number: 26
============================================================================================================================================
X_prev: 2.1368629285954843, X_curr: 2.136851417164889
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.136851417164889 with accuracy of 0.0001 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 3.0 ms.
Number of steps: 26

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-05...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
Current interval searched in: [0.7731835607175523,1]. Split point(c) for interval: 0.7732835363943361
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7732835363943361,1].
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
Current interval searched in: [0.7732835363943361,1]. Split point(c) for interval: 0.7733256675283257
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733256675283257,1].
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
Current interval searched in: [0.7733256675283257,1]. Split point(c) for interval: 0.7733434137535998
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733434137535998,1].
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
Current interval searched in: [0.7733434137535998,1]. Split point(c) for interval: 0.7733508872189108
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733508872189108,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7733508872189108 with accuracy of 1e-05 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 4.0 ms.
Number of steps: 15

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-05...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Iteration number: 26
============================================================================================================================================
X_prev: 2.1368629285954843, X_curr: 2.136851417164889
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.136851417164889 with accuracy of 1e-05 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 3.0 ms.
Number of steps: 26

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-06...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
Current interval searched in: [0.7731835607175523,1]. Split point(c) for interval: 0.7732835363943361
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7732835363943361,1].
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
Current interval searched in: [0.7732835363943361,1]. Split point(c) for interval: 0.7733256675283257
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733256675283257,1].
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
Current interval searched in: [0.7733256675283257,1]. Split point(c) for interval: 0.7733434137535998
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733434137535998,1].
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
Current interval searched in: [0.7733434137535998,1]. Split point(c) for interval: 0.7733508872189108
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733508872189108,1].
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
Current interval searched in: [0.7733508872189108,1]. Split point(c) for interval: 0.773354034253293
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.773354034253293,1].
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
Current interval searched in: [0.773354034253293,1]. Split point(c) for interval: 0.7733553594048526
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733553594048526,1].
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
Current interval searched in: [0.7733553594048526,1]. Split point(c) for interval: 0.7733559173906324
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733559173906324,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7733559173906324 with accuracy of 1e-06 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 1.001 ms.
Number of steps: 18

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs((x_curr - x_prev) / x_curr) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-06...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Iteration number: 26
============================================================================================================================================
X_prev: 2.1368629285954843, X_curr: 2.136851417164889
============================================================================================================================================

Iteration number: 27
============================================================================================================================================
X_prev: 2.136851417164889, X_curr: 2.136851414987547
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.136851414987547 with accuracy of 1e-06 by using convergence test: (abs((x_curr - x_prev) / x_curr) < epsilon).
 Time of full iteration: 3.002 ms.
Number of steps: 27

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.1...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7680221220224707 with accuracy of 0.1 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 1.0 ms.
Number of steps: 7

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.1...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.145176961458728 with accuracy of 0.1 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 3.002 ms.
Number of steps: 23

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.05...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.771070249562074 with accuracy of 0.05 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 5.0 ms.
Number of steps: 8

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.05...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.137702323751848 with accuracy of 0.05 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 2.0010000000000003 ms.
Number of steps: 24

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.01...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7729465884042789 with accuracy of 0.01 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 5.001 ms.
Number of steps: 10

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.01...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.137702323751848 with accuracy of 0.01 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 2.984 ms.
Number of steps: 24

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.005...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7731835607175523 with accuracy of 0.005 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 1.0 ms.
Number of steps: 11

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.005...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.1368629285954843 with accuracy of 0.005 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 2.999 ms.
Number of steps: 25

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.001...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
Current interval searched in: [0.7731835607175523,1]. Split point(c) for interval: 0.7732835363943361
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7732835363943361,1].
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
Current interval searched in: [0.7732835363943361,1]. Split point(c) for interval: 0.7733256675283257
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733256675283257,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7733256675283257 with accuracy of 0.001 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 1.0 ms.
Number of steps: 13

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.001...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.1368629285954843 with accuracy of 0.001 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 3.0010000000000003 ms.
Number of steps: 25

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.0001...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
Current interval searched in: [0.7731835607175523,1]. Split point(c) for interval: 0.7732835363943361
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7732835363943361,1].
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
Current interval searched in: [0.7732835363943361,1]. Split point(c) for interval: 0.7733256675283257
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733256675283257,1].
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
Current interval searched in: [0.7733256675283257,1]. Split point(c) for interval: 0.7733434137535998
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733434137535998,1].
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
Current interval searched in: [0.7733434137535998,1]. Split point(c) for interval: 0.7733508872189108
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733508872189108,1].
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
Current interval searched in: [0.7733508872189108,1]. Split point(c) for interval: 0.773354034253293
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.773354034253293,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.773354034253293 with accuracy of 0.0001 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 3.0 ms.
Number of steps: 16

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 0.0001...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.1368629285954843 with accuracy of 0.0001 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 3.0 ms.
Number of steps: 25

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-05...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
Current interval searched in: [0.7731835607175523,1]. Split point(c) for interval: 0.7732835363943361
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7732835363943361,1].
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
Current interval searched in: [0.7732835363943361,1]. Split point(c) for interval: 0.7733256675283257
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733256675283257,1].
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
Current interval searched in: [0.7733256675283257,1]. Split point(c) for interval: 0.7733434137535998
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733434137535998,1].
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
Current interval searched in: [0.7733434137535998,1]. Split point(c) for interval: 0.7733508872189108
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733508872189108,1].
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
Current interval searched in: [0.7733508872189108,1]. Split point(c) for interval: 0.773354034253293
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.773354034253293,1].
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
Current interval searched in: [0.773354034253293,1]. Split point(c) for interval: 0.7733553594048526
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733553594048526,1].
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
Current interval searched in: [0.7733553594048526,1]. Split point(c) for interval: 0.7733559173906324
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733559173906324,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7733559173906324 with accuracy of 1e-05 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 4.001 ms.
Number of steps: 18

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-05...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Iteration number: 26
============================================================================================================================================
X_prev: 2.1368629285954843, X_curr: 2.136851417164889
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.136851417164889 with accuracy of 1e-05 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 2.0 ms.
Number of steps: 26

Performing Regula Falsi on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-06...

Regula falsi start.

Iteration number: 0
============================================================================================================================================
Current interval searched in: [0.5,1]. Split point(c) for interval: 0.5605650858173139
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.5605650858173139,1].
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
Current interval searched in: [0.5605650858173139,1]. Split point(c) for interval: 0.6216894673489434
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6216894673489434,1].
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
Current interval searched in: [0.6216894673489434,1]. Split point(c) for interval: 0.6772475282654504
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.6772475282654504,1].
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
Current interval searched in: [0.6772475282654504,1]. Split point(c) for interval: 0.7198656432618303
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7198656432618303,1].
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
Current interval searched in: [0.7198656432618303,1]. Split point(c) for interval: 0.7468021971686806
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7468021971686806,1].
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
Current interval searched in: [0.7468021971686806,1]. Split point(c) for interval: 0.7611830266981156
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7611830266981156,1].
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
Current interval searched in: [0.7611830266981156,1]. Split point(c) for interval: 0.7680221220224707
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7680221220224707,1].
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
Current interval searched in: [0.7680221220224707,1]. Split point(c) for interval: 0.771070249562074
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.771070249562074,1].
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
Current interval searched in: [0.771070249562074,1]. Split point(c) for interval: 0.772386381321533
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.772386381321533,1].
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
Current interval searched in: [0.772386381321533,1]. Split point(c) for interval: 0.7729465884042789
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7729465884042789,1].
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
Current interval searched in: [0.7729465884042789,1]. Split point(c) for interval: 0.7731835607175523
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7731835607175523,1].
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
Current interval searched in: [0.7731835607175523,1]. Split point(c) for interval: 0.7732835363943361
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7732835363943361,1].
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
Current interval searched in: [0.7732835363943361,1]. Split point(c) for interval: 0.7733256675283257
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733256675283257,1].
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
Current interval searched in: [0.7733256675283257,1]. Split point(c) for interval: 0.7733434137535998
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733434137535998,1].
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
Current interval searched in: [0.7733434137535998,1]. Split point(c) for interval: 0.7733508872189108
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733508872189108,1].
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
Current interval searched in: [0.7733508872189108,1]. Split point(c) for interval: 0.773354034253293
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.773354034253293,1].
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
Current interval searched in: [0.773354034253293,1]. Split point(c) for interval: 0.7733553594048526
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733553594048526,1].
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
Current interval searched in: [0.7733553594048526,1]. Split point(c) for interval: 0.7733559173906324
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733559173906324,1].
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
Current interval searched in: [0.7733559173906324,1]. Split point(c) for interval: 0.773356152342001
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.773356152342001,1].
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
Current interval searched in: [0.773356152342001,1]. Split point(c) for interval: 0.7733562512728368
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733562512728368,1].
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
Current interval searched in: [0.7733562512728368,1]. Split point(c) for interval: 0.7733562929295397
Since f(c)*f(b)<0 there must be a solution in [c,b]. Creating new interval [0.7733562929295397,1].
============================================================================================================================================

Regula falsi end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 0.7733562929295397 with accuracy of 1e-06 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 5.0 ms.
Number of steps: 21

Performing Newton Raphson on the function: (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) on the interval [0.5,1]...
Using convergence criterion: abs(function(x_curr) / derivative(function, x_curr)) < epsilon.
First, checking test conditions for solution existence in the interval [0.5,1].
Checking values of f(a) and f(b).
Value f(a) = 0.18951907817851993
Value f(b) = -1.375071111210281
There is a solution in the interval!
Finding solution given precision 1e-06...

Newton Raphson start.

Iteration number: 0
============================================================================================================================================
X_prev: 0.5, X_curr: 0.1594530951862056
============================================================================================================================================

Iteration number: 1
============================================================================================================================================
X_prev: 0.1594530951862056, X_curr: 0.41372602809257164
============================================================================================================================================

Iteration number: 2
============================================================================================================================================
X_prev: 0.41372602809257164, X_curr: -0.29183785788552086
============================================================================================================================================

Iteration number: 3
============================================================================================================================================
X_prev: -0.29183785788552086, X_curr: 0.49760810584609794
============================================================================================================================================

Iteration number: 4
============================================================================================================================================
X_prev: 0.49760810584609794, X_curr: 0.15748814471026024
============================================================================================================================================

Iteration number: 5
============================================================================================================================================
X_prev: 0.15748814471026024, X_curr: 0.41263381620917156
============================================================================================================================================

Iteration number: 6
============================================================================================================================================
X_prev: 0.41263381620917156, X_curr: -0.31332231962778817
============================================================================================================================================

Iteration number: 7
============================================================================================================================================
X_prev: -0.31332231962778817, X_curr: 0.49164469862192556
============================================================================================================================================

Iteration number: 8
============================================================================================================================================
X_prev: 0.49164469862192556, X_curr: 0.15132630544932346
============================================================================================================================================

Iteration number: 9
============================================================================================================================================
X_prev: 0.15132630544932346, X_curr: 0.40937267669698874
============================================================================================================================================

Iteration number: 10
============================================================================================================================================
X_prev: 0.40937267669698874, X_curr: -0.3866314159632731
============================================================================================================================================

Iteration number: 11
============================================================================================================================================
X_prev: -0.3866314159632731, X_curr: 0.4850679486764322
============================================================================================================================================

Iteration number: 12
============================================================================================================================================
X_prev: 0.4850679486764322, X_curr: 0.14238492041457124
============================================================================================================================================

Iteration number: 13
============================================================================================================================================
X_prev: 0.14238492041457124, X_curr: 0.40506790641701196
============================================================================================================================================

Iteration number: 14
============================================================================================================================================
X_prev: 0.40506790641701196, X_curr: -0.5113704402272025
============================================================================================================================================

Iteration number: 15
============================================================================================================================================
X_prev: -0.5113704402272025, X_curr: 1.0530576853069937
============================================================================================================================================

Iteration number: 16
============================================================================================================================================
X_prev: 1.0530576853069937, X_curr: 0.6541608790001805
============================================================================================================================================

Iteration number: 17
============================================================================================================================================
X_prev: 0.6541608790001805, X_curr: 1.0618094890776995
============================================================================================================================================

Iteration number: 18
============================================================================================================================================
X_prev: 1.0618094890776995, X_curr: 0.5968774163272882
============================================================================================================================================

Iteration number: 19
============================================================================================================================================
X_prev: 0.5968774163272882, X_curr: -0.53947279387891
============================================================================================================================================

Iteration number: 20
============================================================================================================================================
X_prev: -0.53947279387891, X_curr: 1.958043962583028
============================================================================================================================================

Iteration number: 21
============================================================================================================================================
X_prev: 1.958043962583028, X_curr: 2.114838728119353
============================================================================================================================================

Iteration number: 22
============================================================================================================================================
X_prev: 2.114838728119353, X_curr: 2.176182557128062
============================================================================================================================================

Iteration number: 23
============================================================================================================================================
X_prev: 2.176182557128062, X_curr: 2.145176961458728
============================================================================================================================================

Iteration number: 24
============================================================================================================================================
X_prev: 2.145176961458728, X_curr: 2.137702323751848
============================================================================================================================================

Iteration number: 25
============================================================================================================================================
X_prev: 2.137702323751848, X_curr: 2.1368629285954843
============================================================================================================================================

Iteration number: 26
============================================================================================================================================
X_prev: 2.1368629285954843, X_curr: 2.136851417164889
============================================================================================================================================

Newton Raphson end.

The solution to the function (np.sin(3 * x + 2) + np.cos(4 * x ** 2 - 2)) is 2.136851417164889 with accuracy of 1e-06 by using convergence test: (abs(function(x_curr) / derivative(function, x_curr)) < epsilon).
 Time of full iteration: 2.999 ms.
Number of steps: 26

Process finished with exit code 0
